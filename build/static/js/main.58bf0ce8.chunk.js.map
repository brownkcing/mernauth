{"version":3,"sources":["styles/GlobalStyles.js","styles/MediaQueries.js","styles/Mixins.js","services/auth.service.js","home/SignUp.js","home/Login.js","home/Tabs.js","home/User.js","home/Form.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","sizes","menuMax","custom","desktopPlus","desktop","tablet","phone","mediaMin","Object","keys","reduce","acc","label","css","container","button","API_URL","username","email","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","Signup","styled","div","SignupForm","Form","InputReg","SignUpTitle","h1","Button","CheckButton","Mixins","required","value","className","role","validEmail","isEmail","vusername","length","vpassword","SignUp","props","form","useRef","checkBtn","useState","setUsername","setEmail","setPassword","successful","setSuccessful","message","setMessage","onSubmit","e","preventDefault","current","validateAll","context","_errors","AuthService","error","resMessage","toString","ref","type","name","onChange","target","validations","style","color","LoginWrap","LoginForm","LoginInput","LoginTitle","Forgot","Login","loading","setLoading","history","push","window","location","reload","disabled","href","ListTabs","ul","NavTabs","li","Linker","NavLink","Tabs","activeStyle","boxShadow","backgroundColor","to","UserWrap","UserPage","UserContent","UserLabel","User","userLogged","onClick","FormWrapper","FormContainer","RegForms","undefined","setCurrentUser","useEffect","user","exact","path","component","Wrapper","Container","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.58bf0ce8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;700&family=Roboto:wght@300;400;700&display=swap')\r\n  html {\r\n    -ms-text-size-adjust: 100%;\r\n    -webkit-text-size-adjust: 100%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    box-sizing: border-box\r\n \r\n  }\r\n\r\n body {\r\n    display: flex;\r\n    justify-content: center;\r\n    overflow: auto;\r\n    margin: 0;\r\n    margin-top: 5em;\r\n    padding: 0;\r\n    font-family: \"Roboto\", sans-serif;\r\n }\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-weight: 500;\r\n  }\r\n\r\n  input {\r\n    font-size: 1rem;\r\n    height: 2em;\r\n    background: transparent;\r\n    border: none;\r\n    border-bottom: 1px solid gray;\r\n    width: 100%;\r\n    &:focus {\r\n      outline-width: 0;\r\n      border-bottom: 2px solid gray;\r\n    }\r\n  }\r\n\r\n  label {\r\n    color: gray;\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-size: 1.2rem;\r\n    text-align: initial;\r\n    display: block;\r\n    margin-bottom: .5rem;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","import { css } from 'styled-components'\r\n\r\nconst sizes = {\r\n  menuMax: 1382,\r\n  custom: 1200,\r\n  desktopPlus: 994,\r\n  desktop: 992,\r\n  tablet: 768,\r\n  phone: 576\r\n}\r\n\r\nexport const mediaMax = Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (max-width: ${sizes[label] / 16}em) {\r\n      ${css(...args)}\r\n    }\r\n  `\r\n  return acc\r\n}, {})\r\n\r\nexport const mediaMin = Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (min-width: ${sizes[label] / 16}em) {\r\n      ${css(...args)}\r\n    }\r\n  `\r\n  return acc\r\n}, {})","import { css } from 'styled-components';\r\nimport { mediaMin } from '../styles/MediaQueries';\r\n\r\nexport const wrapper = css`\r\n    display: flex;\r\n`;\r\n\r\nexport const container = css`\r\n    z-index: 2;\r\n    position: relative;\r\n    width: auto;\r\n    height: auto;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    ${mediaMin.phone`\r\n        max-width: 540px;\r\n    `};\r\n    ${mediaMin.tablet`\r\n        max-width: 720px;\r\n    `};\r\n    ${mediaMin.desktop`\r\n        max-width: 960px;\r\n    `}; \r\n    ${mediaMin.menuMax`\r\n        max-width: 1140px;\r\n    `};\r\n`;\r\n\r\nexport const row = css`\r\n    display: flex;\r\n`;\r\n\r\nexport const button = css`\r\n    margin: 0.5em;\r\n    padding: 0.7em 7em;\r\n    display: inline-block;\r\n    background-color: #3F98FF;\r\n    border-color: #3F98FF;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    line-height: 1.5;\r\n    border-radius: .25rem;\r\n    border: none;\r\n    &:focus {\r\n        color: white;\r\n        outline-color: #3F98FF;\r\n`;","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Mixins from '../styles/Mixins';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport AuthService from '../services/auth.service';\r\nimport  { isEmail } from 'validator';\r\n\r\nconst Signup = styled.div`\r\n    transition: all 0.3s linear;\r\n    display:block;\r\n`;\r\n\r\nconst SignupForm = styled(Form)`\r\n    height: 100%;\r\n    width: 75%;\r\n    padding: 1em 3em;\r\n`;\r\n\r\nconst InputReg = styled.div`\r\n    padding-bottom: 2em;\r\n`;\r\n\r\nconst SignUpTitle = styled.h1`\r\n    align-self:center;\r\n`;\r\n\r\nconst Button = styled(CheckButton)`\r\n    ${Mixins.button};\r\n`;\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const validEmail = (value) => {\r\n    if (!isEmail(value)) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This is not a valid email.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  const vusername = (value) => {\r\n    if (value.length < 3 || value.length > 20) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          The username must be between 3 and 20 characters.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  const vpassword = (value) => {\r\n    if (value.length < 6 || value.length > 40) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          The password must be between 6 and 40 characters.\r\n        </div>\r\n      );\r\n    }\r\n  };  \r\n\r\nconst SignUp = (props) => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    \r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n      };\r\n    \r\n      const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n      };\r\n    \r\n      const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n      };\r\n    \r\n      const handleRegister = (e) => {\r\n        e.preventDefault();\r\n    \r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n    \r\n        form.current.validateAll();\r\n    \r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          AuthService.register(username, email, password).then(\r\n            (response) => {\r\n              setMessage(response.data.message);\r\n              setSuccessful(true);\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n    \r\n              setMessage(resMessage);\r\n              setSuccessful(false);\r\n            }\r\n          );\r\n        }\r\n      };\r\n    \r\n    return (\r\n        <Signup>\r\n            <SignUpTitle>Sign-Up</SignUpTitle>\r\n            <SignupForm onSubmit={handleRegister} ref={form}>\r\n                <InputReg>\r\n                    <label>Username</label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={onChangeUsername}\r\n                        validations={[required, vusername]}\r\n                    />\r\n                </InputReg>\r\n                <InputReg>\r\n                    <label>Email Address</label>\r\n                    <Input \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={onChangeEmail}\r\n                        validations={[required, validEmail]}\r\n                    />\r\n                </InputReg>\r\n                <InputReg>\r\n                    <label>Password</label>\r\n                    <Input \r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                        validations={[required, vpassword]}\r\n                    />\r\n                </InputReg>\r\n                <Button ref={checkBtn} style={{color:'black'}}>Submit</Button>\r\n                {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                style={{\r\n                  color: successful ? \"#5cb85c\" : \"#d9534f\"\r\n                }}\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}   \r\n            </SignupForm>\r\n        </Signup>\r\n    )\r\n}\r\nexport default SignUp;","import React, {useState, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Mixins from '../styles/Mixins';\r\nimport {Link} from 'react-router-dom';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst LoginWrap = styled.div`\r\n    display:block;\r\n`;\r\n\r\nconst LoginForm = styled(Form)`\r\n    height: 100%;\r\n    width: 75%;\r\n    padding: 1em 3em;\r\n`;\r\n\r\nconst LoginInput = styled.div`\r\n    padding-bottom: 2em;\r\n`;\r\n\r\n\r\nconst LoginTitle = styled.h1`\r\n    align-self:center;\r\n`;\r\n\r\n\r\nconst Forgot = styled.div`\r\n    margin-bottom: 4em;\r\n    a {\r\n        text-decoration: none;\r\n        color: #3F98FF;\r\n        :hover {\r\n            color: #90C4FF;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Button = styled(CheckButton)`\r\n    ${Mixins.button};\r\n`;\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };  \r\n\r\nconst Login = (props) => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n      };\r\n\r\n      const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n      };\r\n\r\n      const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n        form.current.validateAll();\r\n    \r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          AuthService.login(username, password).then(\r\n            () => {\r\n              props.history.push(\"/User\");\r\n              window.location.reload();\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n    \r\n              setLoading(false);\r\n              setMessage(resMessage);\r\n            }\r\n          );\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      };\r\n     \r\n\r\n\r\n    return (\r\n        <LoginWrap>\r\n            <LoginTitle>Login</LoginTitle>\r\n            <LoginForm onSubmit={handleLogin} ref={form}>\r\n                <LoginInput>\r\n                    <label>Username</label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={onChangeUsername}\r\n                        validations={[required]} \r\n                    />\r\n                </LoginInput>\r\n                <LoginInput>\r\n                    <label>Password</label>\r\n                    <Input \r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                        validations={[required]}\r\n                    />\r\n                </LoginInput>       \r\n                <Button ref={checkBtn} disabled={loading} style={{color:'black'}}>{loading}Submit</Button>\r\n                <div style={{color:'red'}}>{message}</div>\r\n                <Forgot>Forgot <a href=\"#\">Password?</a></Forgot>\r\n            </LoginForm>\r\n        </LoginWrap>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst ListTabs = styled.ul`\r\n    display: flex;\r\n    margin:0;\r\n    padding:0;\r\n    width: 100%;\r\n    list-style-type:none;\r\n    justify-content:space-around;\r\n    background:#DDDDDD;\r\n    border-radius: 1em 1em 0 0;\r\n`;\r\n\r\nconst NavTabs = styled.li`\r\n    display:inline-block;\r\n    width: 100%;\r\n    a {\r\n        display:block;\r\n        line-height: 4em;\r\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n        text-decoration: none;\r\n        :active {\r\n            color:grey;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Linker = styled(NavLink)`\r\n    background-color: #EAEAEA;\r\n    box-shadow: 0px 0px 5px inset #DCDCDC;\r\n`;\r\n\r\nexport default function Tabs() {\r\n    return (\r\n        <ListTabs>\r\n            <NavTabs><Linker activeStyle={{boxShadow: \"none\", backgroundColor:\"white\"}} to=\"/signup\" >Sign-Up</Linker></NavTabs>\r\n            <NavTabs><Linker activeStyle={{boxShadow: \"none\", backgroundColor:\"white\"}} to='/login'>Login</Linker></NavTabs>\r\n        </ListTabs>            \r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Mixins from '../styles/Mixins';\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst UserWrap = styled.div`\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    background: linear-gradient(-45deg, #1391a5, #274685);\r\n    color: #fff;\r\n    padding: 0;\r\n    color: #000000;\r\n    background: #fff;\r\n    box-shadow: 0 10px 30px 0 rgb(0 0 0 / 20%);\r\n    border-radius: 1.5em;\r\n`;\r\n\r\nconst UserPage = styled.div`\r\n    ${Mixins.container}\r\n    display:flex;\r\n    flex-wrap: nowrap;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst UserContent = styled.div`\r\n    display:block;\r\n    height: 30vh;\r\n`;\r\n\r\n\r\nconst UserLabel = styled.div`\r\n    padding: 2em;\r\n    label {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\n\r\nconst LoginTitle = styled.h1`\r\n    align-self:center;\r\n`;\r\n\r\nconst User = () => {\r\n        const userLogged = AuthService.getCurrentUser();\r\n        const logOut = () => {\r\n            AuthService.logout();\r\n          };\r\n    return (\r\n        <UserWrap>\r\n            <LoginTitle>Welcome {userLogged.username}</LoginTitle>\r\n            <UserPage>\r\n                <UserContent>\r\n                   <UserLabel><label>This is {userLogged.username} authenticated personal page.</label></UserLabel> \r\n                   <UserLabel><span>Click to</span> <a href=\"/login\" onClick={logOut}>logout</a> <span>and return back to previous page</span></UserLabel>  \r\n                </UserContent>\r\n            </UserPage>\r\n        </UserWrap>\r\n    )\r\n}\r\nexport default User;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Mixins from '../styles/Mixins';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport SignUp from './SignUp';\r\nimport Login from './Login';\r\nimport Tabs from './Tabs';\r\nimport User from './User';\r\n\r\nimport AuthService from '../services/auth.service';\r\n\r\n\r\n\r\nconst FormWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content:center;\r\n    background: linear-gradient(-45deg, #1391a5, #274685);\r\n    color: #fff;\r\n    padding: 0;\r\n    color: #000000;\r\n    background: #fff;\r\n    box-shadow: 0 10px 30px 0 rgb(0 0 0 / 20%);\r\n    border-radius: 1.5em;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n    ${Mixins.container}\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst RegForms = () => {\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    useEffect(() => {\r\n        const user = AuthService.getCurrentUser();\r\n        if (user) {\r\n          setCurrentUser(user);\r\n        }\r\n      }, []);\r\n    \r\n    return (\r\n        <FormWrapper>\r\n            <Tabs />\r\n            <FormContainer>\r\n                <Switch>\r\n                    <Route exact path=\"/signup\" component={SignUp}/>\r\n                    <Route exact path=\"/\" component={SignUp}>\r\n                        <Redirect to=\"/signup\"/>\r\n                    </Route>\r\n                    <Route path=\"/login\" component={Login}  />\r\n                </Switch>\r\n            </FormContainer>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\nexport default RegForms;","import React from 'react';\nimport styled from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport * as Mixins from './styles/Mixins';\nimport Forms from './home/Form';\nimport User from './home/User';\n\nimport './App.css';\nimport { Switch, Route } from 'react-router';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  width: 55vh;\n`;\n\nconst Container = styled.div`\n  ${Mixins.container}\n  \n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <Wrapper>\n        <Container>  \n          <Switch>\n            <Route exact path=\"/user\" component={User} />\n            <Forms />\n          </Switch>\n        </Container>    \n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister();"],"sourceRoot":""}